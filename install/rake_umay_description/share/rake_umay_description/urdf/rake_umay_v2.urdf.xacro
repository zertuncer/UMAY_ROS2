<?xml version="1.0"?>

<robot name="rake_umay" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!--xacro:include filename="$(find realsense2_description)/urdf/_d455.urdf.xacro" /-->
  <!-- <xacro:include filename="$(find umay_arm_description)/urdf/umay_arm.xacro"/> -->

  <xacro:property name="PI" value="3.14159265"/>

  <xacro:property name="chassis_link_mass" value="100"/>
  <xacro:property name="chassis_link_width" value="0.428"/>
  <xacro:property name="chassis_link_depth" value="1.302"/>
  <xacro:property name="chassis_link_height" value="0.212"/>
  
  <xacro:property name="wheel_link_mass" value="5"/>
  <xacro:property name="wheel_link_radius" value="0.2"/>
  <xacro:property name="wheel_link_length" value="0.083"/>
  
  <xacro:property name="wheel_base_x" value="0.550"/>
  <xacro:property name="wheel_base_y" value="0.430"/>
  <xacro:property name="wheel_base_z" value="-0.167"/>

  <xacro:property name="wheel_travel" value="0.05"/>
  
  <xacro:property name="shock_z_offset" value="0.0655"/>
  <xacro:property name="shock_eff_limit" value="12.5106"/>
  <xacro:property name="shock_vel_limit" value="1000"/>
  
  <!-- 		UNITS 
  		wheel_max_velocity: rad/s 
  		wheel_max_effort: N*m
  -->
  <xacro:property name="wheel_max_effort" value="200.12766"/><!--5.12766 * 3-->
  <xacro:property name="wheel_max_velocity" value="500.8696"/><!--244.8696 * 3-->

  <xacro:property name="servo_stall_torque" value="200.649"/><!--0.5649 * 3-->
  <xacro:property name="servo_no_load_speed" value="40.553"/><!--4.553 * 3-->
  
  <material name="silver">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  
  <xacro:macro name="null_inertial">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </xacro:macro>
  
  <xacro:macro name="cuboid_inertial" params="width depth height mass *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia ixx="${mass * (depth * depth + height * height) / 12}" ixy="0" ixz="0" iyy="${mass * (width * width + height * height) / 12}" iyz="0" izz="${mass * (width * width + depth * depth) / 12}"/>
    </inertial>
  </xacro:macro>
  
  <xacro:macro name="cylinder_inertial" params="radius length mass">
    <inertial>
      <mass value="${mass}"/>
      <inertia ixx="${(1 / 12) * mass * (3 * (radius* radius) + (length * length))}" ixy="0" ixz="0" iyy="${(1 / 12) * mass * (3 * (radius* radius) + (length * length))}" iyz="0" izz="${(1 / 12) * mass * 3 * (radius* radius)}"/>
    </inertial>
  </xacro:macro>
  
  <xacro:macro name="shock" params="LR FR isLeft isFront child">
    <joint name="${FR}_${LR}_shock" type="prismatic">
      <parent link="chassis_link"/>
      <child link="${child}"/>
      <origin xyz="${isFront * wheel_base_x} ${isLeft * wheel_base_y} ${wheel_base_z}"/>
      <axis xyz="0 0 -1"/>
      <limit lower="${-wheel_travel / 2}" upper="${wheel_travel / 2}" effort="${shock_eff_limit}" velocity="${shock_vel_limit}"/>
    </joint>
    <transmission name="${FR}_${LR}_shock_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${FR}_${LR}_shock">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${FR}_${LR}_shock_act">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>
  
  
<!-- Wheel macro creates the crucial parts for the wheel --> 
  
  <xacro:macro name="wheel" params="LR FR isLeft">
    <link name="${FR}_${LR}_axle_carrier">
      <xacro:null_inertial/>
    </link>
    <joint name="${FR}_${LR}_axle" type="continuous">
      <parent link="${FR}_${LR}_axle_carrier"/>
      <child link="${FR}_${LR}_wheel"/>
      <origin rpy="${PI/2} 0 0"/>
      <axis xyz="0 0 -1"/>
      <limit effort="${wheel_max_effort}" velocity="${wheel_max_velocity}"/>
    </joint>
    <transmission name="${FR}_${LR}_axle_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${FR}_${LR}_axle">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${FR}_${LR}_axle_act">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
    <link name="${FR}_${LR}_wheel">
      <visual>
      	<origin xyz="0 0 0"/>
        <geometry>
          <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
      	<origin xyz="0 0 0"/>
        <geometry>
          <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
        </geometry>
        <!--surface>
          <friction>
            <ode>
              <mu>0.8</mu>
              <mu2>0.8</mu2>
            </ode>
          </friction>
          <contact>
            <ode>
              <min_depth>0.05</min_depth>
            </ode>
          </contact>
       </surface-->
      </collision>
      <xacro:cylinder_inertial radius="${wheel_link_radius}" length="${wheel_link_length}" mass="${wheel_link_mass}"/>
    </link>
    <gazebo reference="${FR}_${LR}_wheel">
      <material>Gazebo/Black</material>
    </gazebo>
  </xacro:macro>
  
  
<!-- Ackerman Wheel macro creates an extra steering joint --> 
  
  <xacro:macro name="ackermann_wheel" params="LR FR isLeft isFront">
    <link name="${FR}_${LR}_steering_link">
      <xacro:null_inertial/>
    </link>
    <xacro:shock LR="${LR}" FR="${FR}" isLeft="${isLeft}" isFront="${isFront}" child="${FR}_${LR}_steering_link"/>
    <joint name="${FR}_${LR}_steering_joint" type="revolute">
      <parent link="${FR}_${LR}_steering_link"/>
      <child link="${FR}_${LR}_axle_carrier"/>
      <axis xyz="0 0 1"/>
      <limit lower="${-PI/3}" upper="${PI/3}" effort="${servo_stall_torque}" velocity="${servo_no_load_speed}"/>
    </joint>
    <transmission name="${FR}_${LR}_steering_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${FR}_${LR}_steering_joint">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="${FR}_${LR}_steering_act">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
    <xacro:wheel LR="${LR}" FR="${FR}" isLeft="${isLeft}"/>
  </xacro:macro>
  
  <!--link name="base_footprint"/>

  <joint name="base_foot_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint-->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="silver"/>
    </visual>
  </link>

  <xacro:include filename="$(find rake_umay_description)/urdf/rake_umay_sensors.urdf.xacro"/>

  <link name="chassis_link">
    <visual>
      <origin xyz="0 0 ${-chassis_link_height / 2}"/>
      <geometry>
        <box size="${chassis_link_depth} ${chassis_link_width} ${chassis_link_height}"/>
      </geometry>
      <material name="silver"/>
    </visual>
    <collision>
      <origin xyz="0 0 ${-chassis_link_height / 2}"/>
      <geometry>
        <box size="${chassis_link_depth} ${chassis_link_width} ${chassis_link_height}"/>
      </geometry>
    </collision>

    <xacro:cuboid_inertial width="${chassis_link_width}" depth="${chassis_link_depth}" height="${chassis_link_height}" mass="${chassis_link_mass}">
      <origin xyz="0 0 ${-chassis_link_height / 2}"/>
    </xacro:cuboid_inertial>
  </link>


  
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="chassis_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <joint name="base_link_to_chassis_link" type="fixed">
    <parent link="base_link"/>
    <child link="chassis_link"/>
  </joint>

  <!-- <joint name="robotic_arm_to_base_link" type="fixed">
    <parent link="base_link"/>
    <child link="robotic_arm_link"/>
    <origin xyz="${wheel_base_x/2} 0  ${chassis_link_height/2}" rpy="0.0 0.0 0.0"/>
  </joint>

  <joint name="base_link_to_world" type="fixed">
    <parent link="base_link"/>
    <child link="world"/>
    <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
  </joint> -->


  <xacro:ackermann_wheel LR="left" FR="front" isLeft="1" isFront="1"/>
  <xacro:ackermann_wheel LR="right" FR="front" isLeft="-1" isFront="1"/>
  <xacro:ackermann_wheel LR="left" FR="rear" isLeft="1" isFront="-1"/>
  <xacro:ackermann_wheel LR="right" FR="rear" isLeft="-1" isFront="-1"/>
  
  <gazebo>
    <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so"/>
    <ros>
      <namespace>/</namespace>
    </ros>
  </gazebo>
  <ros2_control name="rake_umay_system">
    <hardware>
      <plugin>gazebo_ros2_control/DefaultSystemInterface</plugin>
    </hardware>
    <joint name="front_left_axle">
      <command_interface name="velocity"/>
      <state_interface   name="velocity"/>
    </joint>
    <joint name="front_right_axle">
      <command_interface name="velocity"/>
      <state_interface   name="velocity"/>
    </joint>
    <joint name="front_left_steering_joint">
      <command_interface name="position"/>
      <state_interface   name="position"/>
    </joint>
    <joint name="front_right_steering_joint">
      <command_interface name="position"/>
      <state_interface   name="position"/>
    </joint>
    <!-- add other axle and steering joints as needed -->
  </ros2_control>
</robot>
<!--
front_left: wheel1 -1 -1
front_right: wheel2 -1 1
rear_left: wheel3  1 -1
rear_right: wheel4 1 1
->in swerve robot
-->